# This file is in the public domain.
#
[PATHS]
# Persistant data storage for the testcase
TALER_TEST_HOME = test_merchant_api_home/

# Persistant data storage
TALER_DATA_HOME = $TALER_HOME/.local/share/taler/

# Configuration files
TALER_CONFIG_HOME = $TALER_HOME/.config/taler/

# Cached data, no big deal if lost
TALER_CACHE_HOME = $TALER_HOME/.cache/taler/

[taler]
# What currency do we use?
CURRENCY = EUR
CURRENCY_ROUND_AMOUNT = EUR:0.01

[bank]
HTTP_PORT = 8082

##########################################
# Configuration for the merchant backend #
##########################################

[merchant]

# Which port do we run the backend on? (HTTP server)
PORT = 8080

# How quickly do we want the exchange to send us our money?
# Used only if the frontend does not specify a value.
WIRE_TRANSFER_DELAY = 0 s

# Which plugin (backend) do we use for the DB.
DB = postgres

# Default choice for maximum wire fee.
DEFAULT_MAX_WIRE_FEE = EUR:0.10

# Default choice for maximum deposit fee.
DEFAULT_MAX_DEPOSIT_FEE = EUR:0.10


# This specifies which database the postgres backend uses.
[merchantdb-postgres]
CONFIG = postgres:///talercheck

# Different instances operated by this merchant:
[instance-default]
KEYFILE = ${TALER_CONFIG_HOME}/merchant/default.priv
NAME = Kudos Inc.

[instance-tor]
KEYFILE = ${TALER_CONFIG_HOME}/merchant/tor.priv
NAME = The Tor Project


[instance-tip]
KEYFILE = ${TALER_CONFIG_HOME}/merchant/tip.priv
TIP_EXCHANGE = http://localhost:8081/
TIP_RESERVE_PRIV_FILENAME = ${TALER_CONFIG_HOME}/merchant/reserve/tip.priv
NAME = Test Tipping Merchant


[instance-dtip]
KEYFILE = ${TALER_CONFIG_HOME}/merchant/dtip.priv
TIP_EXCHANGE = http://localhost:8081/
TIP_RESERVE_PRIV_FILENAME = ${TALER_CONFIG_HOME}/merchant/reserve/dtip.priv
NAME = Test Tipping Merchant 2

[instance-nulltip]
KEYFILE = ${TALER_CONFIG_HOME}/merchant/nulltip.priv
TIP_EXCHANGE = http://localhost:8081/
# This key will NEVER be used to create a reserve, so
# as to check tip authorization against a non-reserve
# key.
TIP_RESERVE_PRIV_FILENAME = ${TALER_CONFIG_HOME}/merchant/reserve/nulltip.priv
NAME = Test Null-Tipping Merchant

# Account of the MERCHANT
[merchant-account-merchant]
# What is the merchant's bank account?
PAYTO_URI = "payto://x-taler-bank/localhost/3"

# This is the *salted* response we give out for /contract requests.
# File is generated on first use, no need for merchants to generate
# the salt!
WIRE_RESPONSE = ${TALER_CONFIG_HOME}/merchant/account-3.json

# Accept payments to this account in instance-default
HONOR_default = YES

# Accept payments to this account in instance-tor
HONOR_tor = YES

# Accept payments to this account in instance-tip
HONOR_tip = YES

# Accept payments to this account in instance-dtip
HONOR_dtip = YES

HONOR_nulltip = YES

# Advertise in new contracts of instance-default
ACTIVE_default = YES

# Advertise in new contracts of instance-default
ACTIVE_tor = YES

# Advertise in new contracts of instance-default
ACTIVE_tip = YES

# Advertise in new contracts of instance-default
ACTIVE_nulltip = YES

# Sections starting with "merchant-exchange-" specify trusted exchanges
# (by the merchant)
[merchant-exchange-kudos]
MASTER_KEY = 98NJW3CQHZQGQXTY3K85K531XKPAPAVV4Q5V8PYYRR00NJGZWNVG
BASE_URL = http://localhost:8081/

# only fixes skips.
[auditor]
BASE_URL = http://the.auditor/

# Auditors must be in sections "auditor-", the rest of the section
# name could be anything.
[auditor-ezb]
# Informal name of the auditor. Just for the user.
NAME = European Central Bank

# URL of the auditor (especially for in the future, when the
# auditor offers an automated issue reporting system).
# Not really used today.
URL = http://taler.ezb.eu/

# This is the important bit: the signing key of the auditor.
PUBLIC_KEY = 9QXF7XY7E9VPV47B5Z806NDFSX2VJ79SVHHD29QEQ3BG31ANHZ60

# Which currency is this auditor trusted for?
CURRENCY = EUR


###################################################
# Configuration for the exchange for the testcase #
###################################################

[exchange_keys]

# how long is one signkey valid?
signkey_duration = 4 weeks

# how long are the signatures with the signkey valid?
legal_duration = 2 years

# how long do we generate denomination and signing keys
# ahead of time?
lookahead_sign = 32 weeks 1 day

# how long do we provide to clients denomination and signing keys
# ahead of time?
lookahead_provide = 4 weeks 1 day


[exchange]
# How to access our database
DB = postgres

# HTTP port the exchange listens to
PORT = 8081

# Our public key
MASTER_PUBLIC_KEY = T1VVFQZZARQ1CMF4BN58EE7SKTW5AV2BS18S87ZEGYS4S29J6DNG

# Base URL of the exchange.
BASE_URL = "http://localhost:8081/"


[exchangedb-postgres]
CONFIG = "postgres:///talercheck"


[auditordb-postgres]
CONFIG = postgres:///talercheck


# Account of the EXCHANGE
[exchange-account-exchange]
# What is the exchange's bank account (with the "Taler Bank" demo system)?
PAYTO_URI = "payto://x-taler-bank/localhost/2"

# This is the response we give out for the /wire request.  It provides
# wallets with the bank information for transfers to the exchange.
WIRE_RESPONSE = ${TALER_CONFIG_HOME}/exchange/account-2.json

WIRE_GATEWAY_URL = "http://localhost:8082/2/"
WIRE_GATEWAY_AUTH_METHOD = NONE

ENABLE_DEBIT = YES
ENABLE_CREDIT = YES


# wire fees
[fees-x-taler-bank]

# Fees for the forseeable future...
# If you see this after 2018, update to match the next 10 years...
WIRE-FEE-2018 = EUR:0.01
WIRE-FEE-2019 = EUR:0.01
WIRE-FEE-2020 = EUR:0.01
WIRE-FEE-2021 = EUR:0.01
WIRE-FEE-2022 = EUR:0.01
WIRE-FEE-2023 = EUR:0.01
WIRE-FEE-2024 = EUR:0.01
WIRE-FEE-2025 = EUR:0.01
WIRE-FEE-2026 = EUR:0.01
WIRE-FEE-2027 = EUR:0.01
CLOSING-FEE-2018 = EUR:0.01
CLOSING-FEE-2019 = EUR:0.01
CLOSING-FEE-2020 = EUR:0.01
CLOSING-FEE-2021 = EUR:0.01
CLOSING-FEE-2022 = EUR:0.01
CLOSING-FEE-2023 = EUR:0.01
CLOSING-FEE-2024 = EUR:0.01
CLOSING-FEE-2025 = EUR:0.01
CLOSING-FEE-2026 = EUR:0.01
CLOSING-FEE-2027 = EUR:0.01


[coin_eur_ct_1]
value = EUR:0.01
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.00
fee_deposit = EUR:0.00
fee_refresh = EUR:0.01
fee_refund = EUR:0.01
rsa_keysize = 1024

[coin_eur_ct_10]
value = EUR:0.10
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.01
fee_deposit = EUR:0.01
fee_refresh = EUR:0.03
fee_refund = EUR:0.01
rsa_keysize = 1024

[coin_eur_1]
value = EUR:1
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.01
fee_deposit = EUR:0.01
fee_refresh = EUR:0.03
fee_refund = EUR:0.01
rsa_keysize = 1024

[coin_eur_5]
value = EUR:5
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.01
fee_deposit = EUR:0.01
fee_refresh = EUR:0.03
fee_refund = EUR:0.01
rsa_keysize = 1024
