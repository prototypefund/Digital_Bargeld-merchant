# This file is in the public domain.
#
[PATHS]
# Persistant data storage for the testcase
TALER_TEST_HOME = test_merchant_api_home/


[taler]
# What currency do we use?
CURRENCY = EUR

##########################################
# Configuration for the merchant backend #
##########################################


[merchant]

# Which port do we run the backend on? (HTTP server)
PORT = 8082

# How quickly do we want the exchange to send us our money?
# Used only if the frontend does not specify a value.
WIRE_TRANSFER_DELAY = 0 s

# Which plugin (backend) do we use for the DB.
DB = postgres

# Wire format supported by the merchant.
WIREFORMAT = test

# This option is a list of instances which are to be used
# during the tests. 'default' instance should explicitly be given.
# The instance "token" X must match the corresponding substring in
# section like X-wireformat and merchant-instance-X
INSTANCES = tor default tip dtip

# Default choice for maximum wire fee.
DEFAULT_MAX_WIRE_FEE = EUR:0.10

# Default choice for maximum wire fee.
DEFAULT_MAX_DEPOSIT_FEE = EUR:0.10

[exchange-wire-test]
# Enable 'test' for testing of the actual coin operations.
ENABLE = YES

# Fees for the forseeable future...
# If you see this after 2017, update to match the next 10 years...
WIRE-FEE-2017 = EUR:0.01
WIRE-FEE-2018 = EUR:0.01
WIRE-FEE-2019 = EUR:0.01
WIRE-FEE-2020 = EUR:0.01
WIRE-FEE-2021 = EUR:0.01
WIRE-FEE-2022 = EUR:0.01
WIRE-FEE-2023 = EUR:0.01
WIRE-FEE-2024 = EUR:0.01
WIRE-FEE-2025 = EUR:0.01
WIRE-FEE-2026 = EUR:0.01
CLOSING-FEE-2017 = EUR:0.01
CLOSING-FEE-2018 = EUR:0.01
CLOSING-FEE-2019 = EUR:0.01
CLOSING-FEE-2020 = EUR:0.01
CLOSING-FEE-2021 = EUR:0.01
CLOSING-FEE-2022 = EUR:0.01
CLOSING-FEE-2023 = EUR:0.01
CLOSING-FEE-2024 = EUR:0.01
CLOSING-FEE-2025 = EUR:0.01
CLOSING-FEE-2026 = EUR:0.01


[merchant-exchange-test]
URI = http://localhost:8081/
MASTER_KEY = 98NJW3CQHZQGQXTY3K85K531XKPAPAVV4Q5V8PYYRR00NJGZWNVG

[merchant-instance-default]
KEYFILE = test_merchant.priv

[merchant-instance-wireformat-default]
TEST_RESPONSE_FILE = ${TALER_CONFIG_HOME}/merchant/wire/test.json

[merchant-instance-tor]
KEYFILE = tor_merchant.priv

[merchant-instance-tip]
KEYFILE = reserve_tip.priv
TIP_EXCHANGE = http://localhost:8081/
TIP_RESERVE_PRIV = RKEJM3J3K8D02V6WFHWY14WM2RKFVBW35ZJ0FHWTEJDPN0T7CPYG

[merchant-instance-dtip]
KEYFILE = reserve_dtip.priv
TIP_EXCHANGE = http://localhost:8081/
TIP_RESERVE_PRIV = ENK9E0GYJ5EJEEC0QN3GY7KJRMNXW3B2SSWQDNJ3F1CEMFGC0970

[merchant-instance-wireformat-tor]
TEST_RESPONSE_FILE = ${TALER_CONFIG_HOME}/merchant/wire/test.json

[merchant-instance-wireformat-tip]
TEST_RESPONSE_FILE = ${TALER_CONFIG_HOME}/merchant/wire/test.json

[merchant-instance-wireformat-dtip]
TEST_RESPONSE_FILE = ${TALER_CONFIG_HOME}/merchant/wire/test.json

# Auditors must be in sections "auditor-", the rest of the section
# name could be anything.
[merchant-auditor-ezb]
# Informal name of the auditor. Just for the user.
NAME = European Central Bank

# URI of the auditor (especially for in the future, when the
# auditor offers an automated issue reporting system).
# Not really used today.
URI = http://taler.ezb.eu/

# This is the important bit: the signing key of the auditor.
PUBLIC_KEY = 9QXF7XY7E9VPV47B5Z806NDFSX2VJ79SVHHD29QEQ3BG31ANHZ60

# This specifies which database we use.
[merchantdb-postgres]
CONFIG = postgres:///talercheck

# "wire-" sections include wire details, here for SEPA.
[wire-sepa]
IBAN = DE67830654080004822650
NAME = GNUNET E.V
BIC = GENODEF1SRL
SALT = 17919252168512238964
ADDRESS = "Garching"


###################################################
# Configuration for the exchange for the testcase #
###################################################

[exchange]
# How to access our database
DB = postgres

# HTTP port the exchange listens to
PORT = 8081

# Our public key
MASTER_PUBLIC_KEY = T1VVFQZZARQ1CMF4BN58EE7SKTW5AV2BS18S87ZEGYS4S29J6DNG

[exchangedb-postgres]
DB_CONN_STR = "postgres:///talercheck"

[exchange-wire-test]
# This is the response we give out for the /wire request.  It provides
# wallets with the bank information for transfers to the exchange.
# Note that the _incoming_ account is #3, while the
# outgoing account of the exchange (see below) is #2.
TEST_RESPONSE_FILE = ${TALER_CONFIG_HOME}/test.json

# What is the main website of the bank?
BANK_URI = "http://localhost:8083/"
# From which account at the 'bank' should outgoing wire transfers be made?
BANK_ACCOUNT_NUMBER = 2


[coin_eur_ct_1]
value = EUR:0.01
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.00
fee_deposit = EUR:0.00
fee_refresh = EUR:0.01
fee_refund = EUR:0.01
rsa_keysize = 1024

[coin_eur_ct_10]
value = EUR:0.10
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.01
fee_deposit = EUR:0.01
fee_refresh = EUR:0.03
fee_refund = EUR:0.01
rsa_keysize = 1024

[coin_eur_1]
value = EUR:1
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.01
fee_deposit = EUR:0.01
fee_refresh = EUR:0.03
fee_refund = EUR:0.01
rsa_keysize = 1024

[coin_eur_5]
value = EUR:5
duration_overlap = 5 minutes
duration_withdraw = 7 days
duration_spend = 2 years
duration_legal = 3 years
fee_withdraw = EUR:0.01
fee_deposit = EUR:0.01
fee_refresh = EUR:0.03
fee_refund = EUR:0.01
rsa_keysize = 1024
