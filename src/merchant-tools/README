** Taler Merchant Payments Generator **

=== INTRODUCTION ===

The tool contained in this directory is used to populate the
merchant's and exchange's database with fake payments.
It is mainly used for debugging applications that need some
payments to be in place.

It is mandatory to give it a config file that contains information
about the setup to target. Note that the merchant and the exchange
run by this command will use their own config files, so just few values
are required for it to run.

=== RUNNING IT ===

The payment generator takes all the input from the command line.
It comes with two subcommands: 'ordinary' and 'corner'.  The first
performs "ordinary" payments (payments that are supposed to get
through), whereas the second does less usual cases, with unaggregated
payments or non default instances.

The usual --help option is provided, so the following command will
show, for instance, all the available options for the 'corner' switch.
  
  $ taler-merchant-benchmark corner --help

Here is the output:

  taler-merchant-benchmark
  Populate databases with corner case payments
  Arguments mandatory for long options are also mandatory for short options.
    -h, --help                 print this help
    -L, --log=LOGLEVEL         configure logging to use LOGLEVEL
    -u, --unaggregated-number=UN
                               will generate UN unaggregated payments, defaults
                                 to 1
    -t, --two-coins=TC         will perform TC 2-coins payments, defaults to 1
    -m, --merchant-url=MU      merchant base url, mandatory
    -i, --alt-instance=AI      alternative (non default) instance, used to
                                 provide fresh wire details to make unaggregated
                                 transactions stay so. Note, this instance will
                                 be given far future wire deadline, and so it
                                 should never author now-deadlined transactions,
                                 as they would get those far future ones
                                 aggregated too.
    -b, --bank-url=BU          bank base url, mandatory
    -l, --logfile=LF           will log to file LF
  Report bugs to taler@gnu.org.
  GNUnet home page: http://www.gnu.org/s/taler/
  General help using GNU software: http://www.gnu.org/gethelp/

The most important (and mandatory) arguments are --bank-url,
and --merchant-url.  The first is used by the generator to launch
the bank; in particular, the generator tests that the bank is
actually serving that URL.  The second argument is used by the
generator to reach the merchant, in order to get and pay for contracts.

Feel free to issue the --help option for the 'ordinary' subcommand as well!
